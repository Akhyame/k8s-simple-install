# =============================================================================
# Kubernetes Dashboard - Configuration améliorée avec sécurité renforcée
# =============================================================================
# Ce fichier déploie le Kubernetes Dashboard avec des améliorations de sécurité
# et des fonctionnalités supplémentaires pour un environnement plus robuste.
#
# Déploiement: kubectl apply -f dashboard-improved.yaml
# Accès: https://<NODE-IP>:30001
# Token: kubectl -n kube-system create token dashboard-admin-user
# =============================================================================

# -----------------------------------------------------------------------------
# 1. NAMESPACE DÉDIÉ (Optionnel - peut utiliser kube-system)
# -----------------------------------------------------------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard
  labels:
    name: kubernetes-dashboard
    kubernetes.io/metadata.name: kubernetes-dashboard

---

# -----------------------------------------------------------------------------
# 2. SERVICE ACCOUNT - Compte de service pour l'authentification
# -----------------------------------------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dashboard-admin-user
  namespace: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard

---

# -----------------------------------------------------------------------------
# 3. SECRET - Token persistant pour l'authentification (Kubernetes 1.24+)
# -----------------------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: dashboard-admin-user-token
  namespace: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
  annotations:
    kubernetes.io/service-account.name: dashboard-admin-user
type: kubernetes.io/service-account-token

---

# -----------------------------------------------------------------------------
# 4. CLUSTER ROLE - Rôle avec permissions appropriées (pas cluster-admin)
# -----------------------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dashboard-admin-role
  labels:
    k8s-app: kubernetes-dashboard
rules:
# Permissions pour visualiser et gérer la plupart des ressources
- apiGroups: [""]
  resources: ["*"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["*"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["extensions"]
  resources: ["*"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Permissions pour les métriques
- apiGroups: ["metrics.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
# Exclusions pour la sécurité - pas d'accès aux ressources critiques
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
  resourceNames: ["dashboard-admin-user-token"]

---

# -----------------------------------------------------------------------------
# 5. CLUSTER ROLE BINDING - Liaison du rôle au service account
# -----------------------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dashboard-admin-binding
  labels:
    k8s-app: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dashboard-admin-role
subjects:
- kind: ServiceAccount
  name: dashboard-admin-user
  namespace: kubernetes-dashboard

---

# -----------------------------------------------------------------------------
# 6. CONFIGMAP - Configuration du Dashboard
# -----------------------------------------------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes-dashboard-settings
  namespace: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
data:
  # Configuration de l'interface
  _global-settings.json: |
    {
      "clusterName": "Production Cluster",
      "itemsPerPage": 20,
      "autoRefreshTimeInterval": 10,
      "defaultNamespace": "default",
      "namespaceFallbackList": ["default", "kube-system"],
      "logsAutoRefreshTimeInterval": 5,
      "resourceAutoRefreshTimeInterval": 5,
      "disableAccessDeniedNotifications": false
    }

---

# -----------------------------------------------------------------------------
# 7. SECRET - Certificats SSL personnalisés (auto-générés si non fournis)
# -----------------------------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-certs
  namespace: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
type: Opaque
data: {}

---

# -----------------------------------------------------------------------------
# 8. DEPLOYMENT - Déploiement du Dashboard avec configuration améliorée
# -----------------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
    version: v2.7.0
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
        version: v2.7.0
    spec:
      # Configuration de sécurité du pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 2001
        fsGroup: 2001
        seccompProfile:
          type: RuntimeDefault
      
      serviceAccountName: dashboard-admin-user
      
      # Sélecteur de nœud pour les systèmes Linux
      nodeSelector:
        kubernetes.io/os: linux
      
      # Tolérance pour les nœuds avec taints
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      
      containers:
      - name: kubernetes-dashboard
        image: kubernetesui/dashboard:v2.7.0
        imagePullPolicy: Always
        
        # Configuration des ports
        ports:
        - containerPort: 8443
          protocol: TCP
          name: https
        
        # Arguments de lancement
        args:
        - --auto-generate-certificates
        - --namespace=kubernetes-dashboard
        - --tls-cert-file=/tls.crt
        - --tls-key-file=/tls.key
        - --enable-skip-login
        - --disable-settings-authorizer
        - --enable-insecure-login=false
        - --token-ttl=43200
        
        # Montage des volumes
        volumeMounts:
        - name: kubernetes-dashboard-certs
          mountPath: /certs
          readOnly: true
        - mountPath: /tmp
          name: tmp-volume
        
        # Probes de santé
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: 8443
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: 8443
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        # Limites et demandes de ressources
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        
        # Configuration de sécurité du conteneur
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 2001
          capabilities:
            drop:
            - ALL
      
      # Configuration des volumes
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: kubernetes-dashboard-certs
      - name: tmp-volume
        emptyDir:
          sizeLimit: 1Gi

---

# -----------------------------------------------------------------------------
# 9. SERVICE - Exposition sécurisée du Dashboard
# -----------------------------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
  annotations:
    # Annotations pour load balancer (si utilisé)
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ""
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "https"
spec:
  type: NodePort
  selector:
    k8s-app: kubernetes-dashboard
  ports:
  - name: https
    port: 443
    targetPort: 8443
    nodePort: 30001
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---

# -----------------------------------------------------------------------------
# 10. NETWORK POLICY - Sécurité réseau (optionnel)
# -----------------------------------------------------------------------------
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kubernetes-dashboard-network-policy
  namespace: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
spec:
  podSelector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 8443
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 6443  # API Server
    - protocol: TCP
      port: 443   # HTTPS général
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS

---

# -----------------------------------------------------------------------------
# 11. HORIZONTAL POD AUTOSCALER - Mise à l'échelle automatique (optionnel)
# -----------------------------------------------------------------------------
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kubernetes-dashboard-hpa
  namespace: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kubernetes-dashboard
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
